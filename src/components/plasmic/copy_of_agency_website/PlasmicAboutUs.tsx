// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: h64FJUinfLsT3oJv18qEKw
// Component: XFdIKDmh1bFQ

import * as React from "react";

import {
  Flex as Flex__,
  MultiChoiceArg,
  PlasmicDataSourceContextProvider as PlasmicDataSourceContextProvider__,
  PlasmicIcon as PlasmicIcon__,
  PlasmicImg as PlasmicImg__,
  PlasmicLink as PlasmicLink__,
  PlasmicPageGuard as PlasmicPageGuard__,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  Stack as Stack__,
  StrictProps,
  Trans as Trans__,
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
  ensureGlobalVariants,
  generateOnMutateForSpec,
  generateStateOnChangeProp,
  generateStateOnChangePropForCodeComponents,
  generateStateValueProp,
  get as $stateGet,
  hasVariant,
  initializeCodeComponentStates,
  initializePlasmicStates,
  makeFragment,
  omit,
  pick,
  renderPlasmicSlot,
  set as $stateSet,
  useCurrentUser,
  useDollarState,
  usePlasmicTranslator,
  useTrigger,
  wrapWithClassName
} from "@plasmicapp/react-web";
import {
  DataCtxReader as DataCtxReader__,
  useDataEnv,
  useGlobalActions
} from "@plasmicapp/react-web/lib/host";

import Header from "../../Header"; // plasmic-import: h2Z0y8j3p_XM/component
import PersonCard from "../../PersonCard"; // plasmic-import: 6_sZdAR6xESy/component
import ServiceValue from "../../ServiceValue"; // plasmic-import: zivLNam5NcS7/component
import HomeFooterTop from "../../HomeFooterTop"; // plasmic-import: EE1u5reRX2Fo/component
import FooterMain from "../../FooterMain"; // plasmic-import: EEpzYH0J7Tm2/component

import { useScreenVariants as useScreenVariantsuLgfdXaUnlx8 } from "./PlasmicGlobalVariant__Screen"; // plasmic-import: uLgfdXaUNLX8/globalVariant

import "@plasmicapp/react-web/lib/plasmic.css";

import projectcss from "./plasmic.module.css"; // plasmic-import: h64FJUinfLsT3oJv18qEKw/projectcss
import sty from "./PlasmicAboutUs.module.css"; // plasmic-import: XFdIKDmh1bFQ/css

import IconIcon from "./icons/PlasmicIcon__Icon"; // plasmic-import: Z4VKD-4evJen/icon
import Icon2Icon from "./icons/PlasmicIcon__Icon2"; // plasmic-import: g-F5J-6h8vI-/icon
import Icon3Icon from "./icons/PlasmicIcon__Icon3"; // plasmic-import: nCQvkMBsniiM/icon
import team4JpgKivleBmSrSsn from "./images/team4Jpg.jpg"; // plasmic-import: kivleBmSRSsn/picture
import tm1JpgDiFmu2Fo5Aap from "./images/tm1Jpg.jpg"; // plasmic-import: diFMU2FO5aap/picture
import team2Jpg3DwvVhTuzr from "./images/team2Jpg3.jpg"; // plasmic-import: -dwv_VH-tuzr/picture
import images1JpgSK08Q7Dnzads from "./images/images1Jpg.jpg"; // plasmic-import: sK08q7Dnzads/picture
import avatar3PngXb5EAwauuV4 from "./images/avatar3Png.png"; // plasmic-import: XB5E-awauuV4/picture
import unnamedJpgXTdosVi6N5TN from "./images/unnamedJpg.jpg"; // plasmic-import: xTDOSVi6n5tN/picture

createPlasmicElementProxy;

export type PlasmicAboutUs__VariantMembers = {};
export type PlasmicAboutUs__VariantsArgs = {};
type VariantPropType = keyof PlasmicAboutUs__VariantsArgs;
export const PlasmicAboutUs__VariantProps = new Array<VariantPropType>();

export type PlasmicAboutUs__ArgsType = {};
type ArgPropType = keyof PlasmicAboutUs__ArgsType;
export const PlasmicAboutUs__ArgProps = new Array<ArgPropType>();

export type PlasmicAboutUs__OverridesType = {
  root?: Flex__<"div">;
  header?: Flex__<"div">;
  aboutUsBanner?: Flex__<"div">;
  foreground2?: Flex__<"div">;
  h1?: Flex__<"h1">;
  ourTeamSection?: Flex__<"div">;
  columns?: Flex__<"div">;
  container?: Flex__<"div">;
  row1?: Flex__<"div">;
  serviceRow?: Flex__<"div">;
  homeFooterTop?: Flex__<typeof HomeFooterTop>;
  footerMain?: Flex__<typeof FooterMain>;
};

export interface DefaultAboutUsProps {
  className?: string;
}

const $$ = {};

function PlasmicAboutUs__RenderFunc(props: {
  variants: PlasmicAboutUs__VariantsArgs;
  args: PlasmicAboutUs__ArgsType;
  overrides: PlasmicAboutUs__OverridesType;
  forNode?: string;
}) {
  const { variants, overrides, forNode } = props;

  const args = React.useMemo(
    () =>
      Object.assign(
        {},
        Object.fromEntries(
          Object.entries(props.args).filter(([_, v]) => v !== undefined)
        )
      ),
    [props.args]
  );

  const $props = {
    ...args,
    ...variants
  };

  const $ctx = useDataEnv?.() || {};
  const refsRef = React.useRef({});
  const $refs = refsRef.current;

  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariantsuLgfdXaUnlx8()
  });

  return (
    <React.Fragment>
      <div className={projectcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            projectcss.plasmic_tokens,
            sty.root
          )}
        >
          <Stack__
            as={"div"}
            data-plasmic-name={"header"}
            data-plasmic-override={overrides.header}
            hasGap={true}
            className={classNames(projectcss.all, sty.header)}
          >
            <Header
              className={classNames("__wab_instance", sty.header__chgg1)}
            />
          </Stack__>
          <div
            data-plasmic-name={"aboutUsBanner"}
            data-plasmic-override={overrides.aboutUsBanner}
            className={classNames(projectcss.all, sty.aboutUsBanner)}
          >
            <Stack__
              as={"div"}
              data-plasmic-name={"foreground2"}
              data-plasmic-override={overrides.foreground2}
              hasGap={true}
              className={classNames(projectcss.all, sty.foreground2)}
            >
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__es3Dn)}
              >
                <h1
                  data-plasmic-name={"h1"}
                  data-plasmic-override={overrides.h1}
                  className={classNames(
                    projectcss.all,
                    projectcss.h1,
                    projectcss.__wab_text,
                    sty.h1
                  )}
                >
                  {hasVariant(globalVariants, "screen", "mobile")
                    ? "About US"
                    : "About Us"}
                </h1>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__czOyp
                  )}
                >
                  {hasVariant(globalVariants, "screen", "mobile")
                    ? "Lorem Ipsum is simply dummy text of the printing and typesetting industry."
                    : "Lorem Ipsum is simply dummy text of the printing and typesetting industry."}
                </div>
              </Stack__>
            </Stack__>
          </div>
          <div
            data-plasmic-name={"ourTeamSection"}
            data-plasmic-override={overrides.ourTeamSection}
            className={classNames(projectcss.all, sty.ourTeamSection)}
          >
            <div
              data-plasmic-name={"columns"}
              data-plasmic-override={overrides.columns}
              className={classNames(projectcss.all, sty.columns)}
            >
              <div className={classNames(projectcss.all, sty.column__kRPs)}>
                <h2
                  className={classNames(
                    projectcss.all,
                    projectcss.h2,
                    projectcss.__wab_text,
                    sty.h2__eVjmb
                  )}
                >
                  {"Our team"}
                </h2>
                <div
                  data-plasmic-name={"container"}
                  data-plasmic-override={overrides.container}
                  className={classNames(projectcss.all, sty.container)}
                >
                  <Stack__
                    as={"div"}
                    data-plasmic-name={"row1"}
                    data-plasmic-override={overrides.row1}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.row1)}
                  >
                    <div
                      className={classNames(projectcss.all, sty.column__mOzZf)}
                    >
                      <PersonCard
                        className={classNames(
                          "__wab_instance",
                          sty.personCard___3MtSn
                        )}
                        image={{
                          src: team4JpgKivleBmSrSsn,
                          fullWidth: 370,
                          fullHeight: 450,
                          aspectRatio: undefined
                        }}
                        slot={"Job title"}
                      >
                        <h3
                          className={classNames(
                            projectcss.all,
                            projectcss.h3,
                            projectcss.__wab_text,
                            sty.h3__ngA6C
                          )}
                        >
                          {"Lorem Ipsum"}
                        </h3>
                      </PersonCard>
                    </div>
                    <div
                      className={classNames(projectcss.all, sty.column___8QWj5)}
                    >
                      <PersonCard
                        className={classNames(
                          "__wab_instance",
                          sty.personCard__bWmcP
                        )}
                        image={{
                          src: tm1JpgDiFmu2Fo5Aap,
                          fullWidth: 400,
                          fullHeight: 400,
                          aspectRatio: undefined
                        }}
                      >
                        <h3
                          className={classNames(
                            projectcss.all,
                            projectcss.h3,
                            projectcss.__wab_text,
                            sty.h3__iCmFf
                          )}
                        >
                          {"Lorem Ipsum"}
                        </h3>
                      </PersonCard>
                    </div>
                    <div
                      className={classNames(projectcss.all, sty.column__rAkAw)}
                    >
                      <PersonCard
                        className={classNames(
                          "__wab_instance",
                          sty.personCard__i8ShA
                        )}
                        image={{
                          src: team2Jpg3DwvVhTuzr,
                          fullWidth: 370,
                          fullHeight: 450,
                          aspectRatio: undefined
                        }}
                      >
                        <h3
                          className={classNames(
                            projectcss.all,
                            projectcss.h3,
                            projectcss.__wab_text,
                            sty.h3__povJ3
                          )}
                        >
                          {"Lorem Ipsum"}
                        </h3>
                      </PersonCard>
                    </div>
                    <div
                      className={classNames(projectcss.all, sty.column__d9Zkm)}
                    >
                      <PersonCard
                        className={classNames(
                          "__wab_instance",
                          sty.personCard___18Gsq
                        )}
                        image={{
                          src: images1JpgSK08Q7Dnzads,
                          fullWidth: 225,
                          fullHeight: 225,
                          aspectRatio: undefined
                        }}
                      >
                        <h3
                          className={classNames(
                            projectcss.all,
                            projectcss.h3,
                            projectcss.__wab_text,
                            sty.h3__jvyvA
                          )}
                        >
                          {"Lorem Ipsum"}
                        </h3>
                      </PersonCard>
                    </div>
                    <div
                      className={classNames(projectcss.all, sty.column__jy8QO)}
                    >
                      <PersonCard
                        className={classNames(
                          "__wab_instance",
                          sty.personCard___5H6T
                        )}
                        image={{
                          src: avatar3PngXb5EAwauuV4,
                          fullWidth: 400,
                          fullHeight: 400,
                          aspectRatio: undefined
                        }}
                      >
                        <h3
                          className={classNames(
                            projectcss.all,
                            projectcss.h3,
                            projectcss.__wab_text,
                            sty.h3___1CypY
                          )}
                        >
                          {"Lorem Ipsum"}
                        </h3>
                      </PersonCard>
                    </div>
                    <div
                      className={classNames(projectcss.all, sty.column__so24L)}
                    >
                      <PersonCard
                        className={classNames(
                          "__wab_instance",
                          sty.personCard__vuOi9
                        )}
                        image={{
                          src: unnamedJpgXTdosVi6N5TN,
                          fullWidth: 370,
                          fullHeight: 411,
                          aspectRatio: undefined
                        }}
                      >
                        <h3
                          className={classNames(
                            projectcss.all,
                            projectcss.h3,
                            projectcss.__wab_text,
                            sty.h3__agp97
                          )}
                        >
                          {"Lorem Ipsum"}
                        </h3>
                      </PersonCard>
                    </div>
                  </Stack__>
                </div>
              </div>
            </div>
          </div>
          <div className={classNames(projectcss.all, sty.freeBox__zYpws)}>
            <Stack__
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox___98Hbm)}
            >
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__a605P)}
              >
                <Stack__
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__t3ZtI)}
                >
                  <h2
                    className={classNames(
                      projectcss.all,
                      projectcss.h2,
                      projectcss.__wab_text,
                      sty.h2__cusH0
                    )}
                  >
                    {"Our values"}
                  </h2>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__ultxv
                    )}
                  >
                    {
                      "Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s,"
                    }
                  </div>
                </Stack__>
                <Stack__
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__u5Kpb)}
                >
                  <Stack__
                    as={"div"}
                    data-plasmic-name={"serviceRow"}
                    data-plasmic-override={overrides.serviceRow}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.serviceRow)}
                  >
                    <div
                      className={classNames(projectcss.all, sty.column__wkhl1)}
                    >
                      <ServiceValue
                        className={classNames(
                          "__wab_instance",
                          sty.serviceValue__p1IyW
                        )}
                      >
                        <h3
                          className={classNames(
                            projectcss.all,
                            projectcss.h3,
                            projectcss.__wab_text,
                            sty.h3__dsP3G
                          )}
                        >
                          {"Value"}
                        </h3>
                      </ServiceValue>
                    </div>
                    <div
                      className={classNames(projectcss.all, sty.column__ePwcN)}
                    >
                      <ServiceValue
                        className={classNames(
                          "__wab_instance",
                          sty.serviceValue__seVi
                        )}
                        slot={
                          "Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s,"
                        }
                      >
                        <h3
                          className={classNames(
                            projectcss.all,
                            projectcss.h3,
                            projectcss.__wab_text,
                            sty.h3___6NEq
                          )}
                        >
                          {"Service"}
                        </h3>
                      </ServiceValue>
                    </div>
                    <div
                      className={classNames(projectcss.all, sty.column___6QWpM)}
                    >
                      <ServiceValue
                        className={classNames(
                          "__wab_instance",
                          sty.serviceValue__tbqQ
                        )}
                        slot={
                          "Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s,"
                        }
                      >
                        <h3
                          className={classNames(
                            projectcss.all,
                            projectcss.h3,
                            projectcss.__wab_text,
                            sty.h3__vigfH
                          )}
                        >
                          {"Value"}
                        </h3>
                      </ServiceValue>
                    </div>
                    <div
                      className={classNames(projectcss.all, sty.column__bSdca)}
                    >
                      <ServiceValue
                        className={classNames(
                          "__wab_instance",
                          sty.serviceValue__gWmeh
                        )}
                      >
                        <h3
                          className={classNames(
                            projectcss.all,
                            projectcss.h3,
                            projectcss.__wab_text,
                            sty.h3___1ZrE
                          )}
                        >
                          {"Value"}
                        </h3>
                      </ServiceValue>
                    </div>
                    <div
                      className={classNames(projectcss.all, sty.column___5IT1A)}
                    >
                      <ServiceValue
                        className={classNames(
                          "__wab_instance",
                          sty.serviceValue__as1B
                        )}
                      >
                        <h3
                          className={classNames(
                            projectcss.all,
                            projectcss.h3,
                            projectcss.__wab_text,
                            sty.h3__gZUqG
                          )}
                        >
                          {"Value"}
                        </h3>
                      </ServiceValue>
                    </div>
                    <div
                      className={classNames(projectcss.all, sty.column___8KWNk)}
                    >
                      <ServiceValue
                        className={classNames(
                          "__wab_instance",
                          sty.serviceValue___6O5Ih
                        )}
                      >
                        <h3
                          className={classNames(
                            projectcss.all,
                            projectcss.h3,
                            projectcss.__wab_text,
                            sty.h3__jLju
                          )}
                        >
                          {"Value"}
                        </h3>
                      </ServiceValue>
                    </div>
                  </Stack__>
                </Stack__>
              </Stack__>
            </Stack__>
          </div>
          <div className={classNames(projectcss.all, sty.freeBox__jz2V0)}>
            <HomeFooterTop
              data-plasmic-name={"homeFooterTop"}
              data-plasmic-override={overrides.homeFooterTop}
              className={classNames("__wab_instance", sty.homeFooterTop)}
            />
          </div>
          <FooterMain
            data-plasmic-name={"footerMain"}
            data-plasmic-override={overrides.footerMain}
            className={classNames("__wab_instance", sty.footerMain)}
          />
        </div>
      </div>
    </React.Fragment>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  root: [
    "root",
    "header",
    "aboutUsBanner",
    "foreground2",
    "h1",
    "ourTeamSection",
    "columns",
    "container",
    "row1",
    "serviceRow",
    "homeFooterTop",
    "footerMain"
  ],
  header: ["header"],
  aboutUsBanner: ["aboutUsBanner", "foreground2", "h1"],
  foreground2: ["foreground2", "h1"],
  h1: ["h1"],
  ourTeamSection: ["ourTeamSection", "columns", "container", "row1"],
  columns: ["columns", "container", "row1"],
  container: ["container", "row1"],
  row1: ["row1"],
  serviceRow: ["serviceRow"],
  homeFooterTop: ["homeFooterTop"],
  footerMain: ["footerMain"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  (typeof PlasmicDescendants)[T][number];
type NodeDefaultElementType = {
  root: "div";
  header: "div";
  aboutUsBanner: "div";
  foreground2: "div";
  h1: "h1";
  ourTeamSection: "div";
  columns: "div";
  container: "div";
  row1: "div";
  serviceRow: "div";
  homeFooterTop: typeof HomeFooterTop;
  footerMain: typeof FooterMain;
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicAboutUs__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicAboutUs__VariantsArgs;
    args?: PlasmicAboutUs__ArgsType;
    overrides?: NodeOverridesType<T>;
  } & Omit<PlasmicAboutUs__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    /* Specify args directly as props*/ Omit<
      PlasmicAboutUs__ArgsType,
      ReservedPropsType
    > &
    /* Specify overrides for each element directly as props*/ Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    /* Specify props for the root element*/ Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: PlasmicDescendants[nodeName],
          internalArgPropNames: PlasmicAboutUs__ArgProps,
          internalVariantPropNames: PlasmicAboutUs__VariantProps
        }),
      [props, nodeName]
    );
    return PlasmicAboutUs__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicAboutUs";
  } else {
    func.displayName = `PlasmicAboutUs.${nodeName}`;
  }
  return func;
}

export const PlasmicAboutUs = Object.assign(
  // Top-level PlasmicAboutUs renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    header: makeNodeComponent("header"),
    aboutUsBanner: makeNodeComponent("aboutUsBanner"),
    foreground2: makeNodeComponent("foreground2"),
    h1: makeNodeComponent("h1"),
    ourTeamSection: makeNodeComponent("ourTeamSection"),
    columns: makeNodeComponent("columns"),
    container: makeNodeComponent("container"),
    row1: makeNodeComponent("row1"),
    serviceRow: makeNodeComponent("serviceRow"),
    homeFooterTop: makeNodeComponent("homeFooterTop"),
    footerMain: makeNodeComponent("footerMain"),

    // Metadata about props expected for PlasmicAboutUs
    internalVariantProps: PlasmicAboutUs__VariantProps,
    internalArgProps: PlasmicAboutUs__ArgProps,

    // Page metadata
    pageMetadata: {
      title: "About Us",
      description: "",
      ogImageSrc: "",
      canonical: ""
    }
  }
);

export default PlasmicAboutUs;
/* prettier-ignore-end */
